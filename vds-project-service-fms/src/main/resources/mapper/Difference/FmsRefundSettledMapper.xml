<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foreveross.vds.service.fms.mapper.differenceCost.FmsRefundSettledMapper">
	<select id="queryFmsRefundSettled" parameterType="com.foreveross.vds.dto.fms.differencecost.FmsRefundSettled" resultType="com.foreveross.vds.dto.fms.differencecost.FmsRefundSettled">
			select t.refund_settled_id   refundSettledId,
			       t.refund_settled_name refundSettledName,
			       t.contract_category   contractCategory,
			       t.temp_contract_id    tempContractId,
			       t.formal_contract_id  formalContractId,
			       t.temp_amount         tempAmount,
			       t.formal_amount       formalAmount,
			       t.refund_amount       refundAmount,
			       t.settled_flag        settledFlag,
			       t.created_by          createdBy,
			       t.creation_date       creationDate,
			       t.last_updated_by     lastUpdatedBy,
			       t.last_update_date    lastUpdateDate,
			       t.last_update_login   lastUpdateLogin,
			       t.attribute1          attribute1,
			       t.attribute2          attribute2,
			       t.attribute3          attribute3,
			       t.attribute4          attribute4,
			       t.attribute5          attribute5,
			       t.attribute6          attribute6,
			       t.attribute7          attribute7,
			       t.attribute8          attribute8,
			       t.attribute9          attribute9,
			       t.attribute10         attribute10,
			       t1.contract_name      tempContractName,
			       t2.contract_name      formalContractName
			  from FMS_REFUND_SETTLED t
			  left join FMS_TRANSPORT_CONTRACT_HEADER t1
			    on t.temp_contract_id = t1.transport_contract_header_id
			  left join FMS_TRANSPORT_CONTRACT_HEADER t2
			    on t.formal_contract_id = t2.transport_contract_header_id
			 where 1 = 1 
			<!-- <if test="logisticsId != null and logisticsId != ''"> 
            	AND ( t.logistics_id = #{logisticsId}) 
            </if>
            <if test="orgId != null"> 
            	AND ( t.org_Id = #{orgId}) 
            </if>
            <if test="batchCode != null and batchCode !=''"> 
            	AND ( t.batch_Code LIKE   '%'|| #{batchCode} ||'%') 
            </if> -->
            <if test="orderBy != null and orderBy != ''"> 
            	order by ${orderBy}
            </if>
	</select>
	<insert id="addFmsRefundSettledByList" parameterType="com.foreveross.vds.dto.fms.differencecost.FmsRefundSettled">
			insert into FMS_REFUND_SETTLED(
			  refund_settled_id   ,
			  refund_settled_name ,
			  contract_category   ,
			  temp_contract_id    ,
			  formal_contract_id  ,
			  temp_amount         ,
			  formal_amount       ,
			  refund_amount       ,
			  settled_flag        ,
			  created_by          ,
			  creation_date       ,
			  last_updated_by     ,
			  last_update_date    ,
			  last_update_login   ,
			  attribute1          ,
			  attribute2          ,
			  attribute3          ,
			  attribute4          ,
			  attribute5          ,
			  attribute6          ,
			  attribute7          ,
			  attribute8          ,
			  attribute9          ,
			  attribute10         
			)
			select FMS_REFUND_SETTLED_S.nextval,A.*
			from (
			<foreach collection="list"  index="index" item="emp" separator="UNION ALL">
			  select
				#{emp.refundSettledName,jdbcType = VARCHAR},
				#{emp.contractCategory,jdbcType = NUMERIC},
				#{emp.tempContractId,jdbcType = NUMERIC},
				#{emp.formalContractId,jdbcType = NUMERIC},
				#{emp.tempAmount,jdbcType = NUMERIC},
				#{emp.formalAmount,jdbcType = NUMERIC},
				#{emp.refundAmount,jdbcType = NUMERIC},
				#{emp.settledFlag,jdbcType = VARCHAR},
				#{emp.createdBy,jdbcType = NUMERIC},
				#{emp.creationDate,jdbcType = TIMESTAMP},
				#{emp.lastUpdatedBy,jdbcType = NUMERIC},
				#{emp.lastUpdateDate,jdbcType = TIMESTAMP},
				#{emp.lastUpdateLogin,jdbcType = VARCHAR},
				#{emp.attribute1,jdbcType = VARCHAR},
				#{emp.attribute2,jdbcType = VARCHAR},
				#{emp.attribute3,jdbcType = VARCHAR},
				#{emp.attribute4,jdbcType = VARCHAR},
				#{emp.attribute5,jdbcType = VARCHAR},
				#{emp.attribute6,jdbcType = VARCHAR},
				#{emp.attribute7,jdbcType = VARCHAR},
				#{emp.attribute8,jdbcType = VARCHAR},
				#{emp.attribute9,jdbcType = VARCHAR},
				#{emp.attribute10,jdbcType = VARCHAR} FROM dual
			 </foreach>
			 ) A
	</insert> 
	<insert id="addFmsRefundSettled" parameterType="com.foreveross.vds.dto.fms.differencecost.FmsRefundSettled">
		insert into FMS_REFUND_SETTLED
		  (refund_settled_id,
		   sendcar_header_id,
		   organization_id,
		   org_id,
		   settled_status,
		   temp_contract_id,
		   formal_contract_id,
		   temp_amount,
		   formal_amount,
		   refund_amount,
		   settled_flag,
		   created_by,
		   creation_date,
		   last_updated_by,
		   last_update_date,
		   last_update_login)
		  select FMS_REFUND_SETTLED_s.Nextval,
		         t4.sendcar_header_id,
		         t4.organization_id,
		         t4.org_id,
		         w.lookup_id,
		         p1.transport_contract_header_id,
		         p2.transport_contract_header_id, 
		         p1.amount,
		         p.unit_fee,
		         p.unit_fee - p1.amount diffAmount, 
		         'N', 
		         #{userId},
		         sysdate,
		         #{userId},
		         sysdate,
		         #{sessionId}
		    from (select tt.lookup_id
		            from fnd_lookup_values tt
		           where tt.lookup_code = 'UN_SUBMIT'
		             and exists
		           (select 1
		                    from fnd_lookup_types tt1
		                   where tt1.lookup_type_id = tt.lookup_type_id
		                     and tt1.lookup_type = 'SETTLE_STATUS')) w,
		         tms_sendcar_header t4
		    left join (select sumï¼ˆftcl.unit_fee) unit_fee, tsl.sendcar_header_id
		    from fms_transport_contract_line   ftcl,
		         fms_transport_contract_header ftch,
		         tms_departure_org_realation   tspo,
		         tms_departure                 tsp,
		         tms_sendcar_line              tsl,
		         tms_sendcar_header            tsh
		   where tsl.sendcar_header_id = tsh.sendcar_header_id
		     and tsl.car_category_id = ftcl.car_category_id
		     and ftch.transport_contract_header_id =
		         ftcl.transport_contract_header_id
		     and ftch.logistics_id = tsh.logistics_id
		     and tspo.departure_id = tsp.departure_id
		     and tsh.organization_id = tspo.organization_id
		     and tsh.transport_method_id = ftcl.transport_method
		     and tsh.end_province_id = ftcl.end_province_id
		     and tsh.end_city_id = ftcl.end_city_id
		     and tsh.end_county_id = ftcl.end_county_id
		     and tsh.creation_date between ftch.start_date and ftch.end_date
		     and ftch.enabled_flag = 'Y'
		     and ftch.confirm_flag = 'Y'
		     and ftch.contract_type =
		         (select lookup_id
		            from fnd_lookup_types lt, fnd_lookup_values lv
		           where lt.lookup_type_id = lv.lookup_type_id
		             and lv.lookup_code = 'CONTRACT_TYPE'
		             and lt.lookup_type = 'TEMPORARY')
		   group by tsl.sendcar_header_id) p
		      on p.sendcar_header_id = t4.sendcar_header_id
		    left join FMS_TRANSPORT_SETTLED_LINE p1
		      on p1.sendcar_header_id = t4.sendcar_header_id
		     and p1.enable_flag = 'Y'
		    left join fms_transport_contract_header p2
		      on p2.override_contract_header_id = p1.transport_settled_header_id
		   where t4.sendcar_header_id in
		         (select t2.sendcar_header_id
		            from fms_sendcar_fee_relate        t1,
		                 tms_sendcar_line              t2,
		                 fms_transport_contract_header t5,
		                 fms_transport_contract_line   t6
		           where t1.sendcar_line_id = t2.sencar_line_id
		             and not exists
		           (select 1
		                    from fms_refund_settled t3
		                   where t3.sendcar_header_id = t2.sendcar_header_id)
		             and t5.transport_contract_header_id =
		                 t6.transport_contract_header_id
		             and t1.transport_contract_line_id =
		                 t6.transport_contract_line_id
		             and t5.contract_type =
		                 (select lookup_id
		                    from fnd_lookup_types lt, fnd_lookup_values lv
		                   where lt.lookup_type_id = lv.lookup_type_id
		                     and lv.lookup_code = 'CONTRACT_TYPE'
		                     and lt.lookup_type = 'TEMPORARY'))
		     and t4.settled_status =
		         (select lookup_id
		            from fnd_lookup_types lt, fnd_lookup_values lv
		           where lt.lookup_type_id = lv.lookup_type_id
		             and lv.lookup_code = 'SETTLE_STATUS'
		             and lt.lookup_type = 'POSTED')
	</insert>
</mapper>