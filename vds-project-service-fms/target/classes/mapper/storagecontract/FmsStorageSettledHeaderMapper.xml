<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foreveross.vds.service.fms.mapper.storagecontract.FmsStorageSettledHeaderMapper">
	
	<select id="getCode" parameterType="java.lang.Long" resultType="java.lang.String">
		select t1.logistics_code || t2.start_point_code || t3.contract_category_id code
		  from FMS_STORAGE_CONTRACT t
		  left join TMS_LOGISTICS_PROVIDERS t1
		    on t.logistics_id = t1.logistics_id
		  left join TMS_START_POINT t2
		    on t2.start_point_id = t.start_point_id
		  left join FMS_STORAGE_CONTRACT_CATEGORY t3
		    on t3.contract_category_id = t.storage_contract_id
		  where t.storage_contract_id = #{storageContractId}
	</select>
	
	<insert id="addFmsStorageSettledHeader" parameterType="com.foreveross.vds.dto.fms.storagecontract.FmsStorageSettledHeader">
	     <selectKey resultType="java.lang.Long" keyProperty="storageSettledHeaderId" order="BEFORE">
              select FMS_STORAGE_SETTLED_HEADER_S.nextval as storageSettledHeaderId from dual
          </selectKey>
			insert into FMS_STORAGE_SETTLED_HEADER
			  (storage_settled_header_id,
			   batch_code,
			   settled_status,
			   batch_fee,
			   reject_reason,
			   formal_flag,
			   refund_flag,
			   remarks,
			   created_by,
			   creation_date,
			   last_updated_by,
			   last_update_date,
			   last_update_login,
			   attribute1,
			   attribute2,
			   attribute3,
			   attribute4,
			   attribute5,
			   attribute6,
			   attribute7,
			   attribute8,
			   attribute9,
			   attribute10)
			values
			  (#{storageSettledHeaderId,
			   jdbcType = VARCHAR},
			   #{batchCode,
			   jdbcType = VARCHAR},
			   #{settledStatus,
			   jdbcType = VARCHAR},
			   #{batchFee,
			   jdbcType = VARCHAR},
			   #{rejectReason,
			   jdbcType = VARCHAR},
			   #{formalFlag,
			   jdbcType = VARCHAR},
			   #{refundFlag,
			   jdbcType = VARCHAR},
			   #{remarks,
			   jdbcType = VARCHAR},
			   #{createdBy,
			   jdbcType = VARCHAR},
			   #{creationDate,
			   jdbcType = VARCHAR},
			   #{lastUpdatedBy,
			   jdbcType = VARCHAR},
			   #{lastUpdateDate,
			   jdbcType = VARCHAR},
			   #{lastUpdateLogin,
			   jdbcType = VARCHAR},
			   #{attribute1,
			   jdbcType = VARCHAR},
			   #{attribute2,
			   jdbcType = VARCHAR},
			   #{attribute3,
			   jdbcType = VARCHAR},
			   #{attribute4,
			   jdbcType = VARCHAR},
			   #{attribute5,
			   jdbcType = VARCHAR},
			   #{attribute6,
			   jdbcType = VARCHAR},
			   #{attribute7,
			   jdbcType = VARCHAR},
			   #{attribute8,
			   jdbcType = VARCHAR},
			   #{attribute9,
			   jdbcType = VARCHAR},
			   #{attribute10,
			   jdbcType = VARCHAR})
	</insert>
	<!-- 驳回 -->
	<update id="rejectedFmsStorageSettledHeader" parameterType="com.foreveross.vds.dto.fms.storagecontract.FmsStorageSettledHeader">
			update FMS_STORAGE_SETTLED_HEADER t set t.reject_reason = #{rejectReason}, t.reject_flag = 'Y'
			where 1=1
			<if test="storageSettledHeaderIdList != null and storageSettledHeaderIdList.size > 0">
	    		AND storage_settled_header_id IN 
	    		<foreach collection="storageSettledHeaderIdList"  index="index" item="storageSettledHeaderId" open="(" close=")" separator=",">
	    			#{storageSettledHeaderId}
	    		</foreach>
	    	</if>
	</update>
	<!-- 通过 -->
	<update id="allowFmsStorageSettledHeader" parameterType="com.foreveross.vds.dto.fms.storagecontract.FmsStorageSettledHeader">
			update FMS_STORAGE_SETTLED_HEADER t set t.reject_flag = 'N'
			where 1=1
			<if test="storageSettledHeaderIdList != null and storageSettledHeaderIdList.size > 0">
	    		AND storage_settled_header_id IN 
	    		<foreach collection="storageSettledHeaderIdList"  index="index" item="storageSettledHeaderId" open="(" close=")" separator=",">
	    			#{storageSettledHeaderId}
	    		</foreach>
	    	</if>
	</update>
</mapper>